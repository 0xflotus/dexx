BENCHMARK: IndexedList: Append 10000 values to indexed list of size 100: Java: 15.3ns/op Dexx: 41.9ns/op. Java is 2.74 times faster
BENCHMARK: IndexedList: Append 10000 values to indexed list of size 10000: Java: 20.3ns/op Dexx: 42.1ns/op. Java is 2.07 times faster
BENCHMARK: IndexedList: Append 10000 values to indexed list of size 100000: Java: 25.1ns/op Dexx: 43.3ns/op. Java is 1.73 times faster
BENCHMARK: IndexedList: Append 10000 values to indexed list of size 1000000: Java: 19.9ns/op Dexx: 44.5ns/op. Java is 2.24 times faster
BENCHMARK: IndexedList: Randomly get 10000 values by index from indexed list of size 100: Java: 7.4ns/op Dexx: 19.4ns/op. Java is 2.62 times faster
BENCHMARK: IndexedList: Randomly get 10000 values by index from indexed list of size 10000: Java: 17.9ns/op Dexx: 24.1ns/op. Java is 1.35 times faster
BENCHMARK: IndexedList: Randomly get 10000 values by index from indexed list of size 100000: Java: 33.8ns/op Dexx: 50.3ns/op. Java is 1.49 times faster
BENCHMARK: IndexedList: Randomly get 10000 values by index from indexed list of size 1000000: Java: 81.2ns/op Dexx: 117.9ns/op. Java is 1.45 times faster
BENCHMARK: IndexedList: Randomly set 10000 values by index from indexed list of size 100: Java: 9.4ns/op Dexx: 38.0ns/op. Java is 4.04 times faster
BENCHMARK: IndexedList: Randomly set 10000 values by index from indexed list of size 10000: Java: 16.4ns/op Dexx: 66.9ns/op. Java is 4.08 times faster
BENCHMARK: IndexedList: Randomly set 10000 values by index from indexed list of size 100000: Java: 21.1ns/op Dexx: 114.4ns/op. Java is 5.42 times faster
BENCHMARK: IndexedList: Randomly set 10000 values by index from indexed list of size 1000000: Java: 26.1ns/op Dexx: 182.5ns/op. Java is 6.99 times faster
BENCHMARK: IndexedList: Prepend 10000 values to indexed list of size 100: Java: 454.1ns/op Dexx: 37.8ns/op. Dexx is 12.01 times faster
BENCHMARK: IndexedList: Prepend 10000 values to indexed list of size 10000: Java: 1936.2ns/op Dexx: 37.9ns/op. Dexx is 51.09 times faster
BENCHMARK: IndexedList: Prepend 10000 values to indexed list of size 100000: Java: 18614.3ns/op Dexx: 41.2ns/op. Dexx is 451.80 times faster
BENCHMARK: IndexedList: Iterate indexed list of size 100000: Java: 7.88ns/op Dexx: 8.25ns/op. Java is 1.05 times faster
BENCHMARK: IndexedList: Iterate indexed list of size 1000000: Java: 7.805ns/op Dexx: 8.598ns/op. Java is 1.10 times faster
BENCHMARK: Map: Remove all items randomly from a map of size 100 elements: Java: 20.0ns/op Dexx: 70.0ns/op. Java is 3.50 times faster
BENCHMARK: Map: Remove all items randomly from a map of size 10000 elements: Java: 35.8ns/op Dexx: 154.3ns/op. Java is 4.31 times faster
BENCHMARK: Map: Remove all items randomly from a map of size 100000 elements: Java: 55.64ns/op Dexx: 297.6ns/op. Java is 5.35 times faster
BENCHMARK: Map: Remove all items randomly from a map of size 1000000 elements: Java: 166.128ns/op Dexx: 457.692ns/op. Java is 2.76 times faster
BENCHMARK: Map: Put 10000 random ints to map of size 100: Java: 45.7ns/op Dexx: 168.2ns/op. Java is 3.68 times faster
BENCHMARK: Map: Put 10000 random ints to map of size 10000: Java: 56.3ns/op Dexx: 200.5ns/op. Java is 3.56 times faster
BENCHMARK: Map: Put 10000 random ints to map of size 100000: Java: 53.3ns/op Dexx: 305.2ns/op. Java is 5.73 times faster
BENCHMARK: Map: Put 10000 random ints to map of size 1000000: Java: 123.8ns/op Dexx: 501.6ns/op. Java is 4.05 times faster
BENCHMARK: Map: Check map of size 100 contains element 100 times: Java: 30.0ns/op Dexx: 40.0ns/op. Java is 1.33 times faster
BENCHMARK: Map: Check map of size 10000 contains element 10000 times: Java: 25.0ns/op Dexx: 79.6ns/op. Java is 3.18 times faster
BENCHMARK: Map: Check map of size 100000 contains element 100000 times: Java: 36.73ns/op Dexx: 184.92ns/op. Java is 5.03 times faster
BENCHMARK: Map: Check map of size 1000000 contains element 1000000 times: Java: 104.103ns/op Dexx: 336.909ns/op. Java is 3.24 times faster
BENCHMARK: Set: Remove all items randomly from a set of size 100 elements: Java: 20.0ns/op Dexx: 70.0ns/op. Java is 3.50 times faster
BENCHMARK: Set: Remove all items randomly from a set of size 10000 elements: Java: 31.8ns/op Dexx: 148.0ns/op. Java is 4.65 times faster
BENCHMARK: Set: Remove all items randomly from a set of size 100000 elements: Java: 48.03ns/op Dexx: 294.17ns/op. Java is 6.12 times faster
BENCHMARK: Set: Remove all items randomly from a set of size 1000000 elements: Java: 81.418ns/op Dexx: 429.272ns/op. Java is 5.27 times faster
BENCHMARK: Set: Check set of size 100 contains element 100 times: Java: 10.0ns/op Dexx: 20.0ns/op. Java is 2.00 times faster
BENCHMARK: Set: Check set of size 10000 contains element 10000 times: Java: 46.5ns/op Dexx: 76.9ns/op. Java is 1.65 times faster
BENCHMARK: Set: Check set of size 100000 contains element 100000 times: Java: 79.4ns/op Dexx: 124.2ns/op. Java is 1.56 times faster
BENCHMARK: Set: Check set of size 1000000 contains element 1000000 times: Java: 235.567ns/op Dexx: 303.498ns/op. Java is 1.29 times faster
BENCHMARK: Set: Add 10000 random ints to set of size 100: Java: 47.2ns/op Dexx: 155.0ns/op. Java is 3.28 times faster
BENCHMARK: Set: Add 10000 random ints to set of size 10000: Java: 55.6ns/op Dexx: 184.8ns/op. Java is 3.32 times faster
BENCHMARK: Set: Add 10000 random ints to set of size 100000: Java: 47.3ns/op Dexx: 281.9ns/op. Java is 5.96 times faster
BENCHMARK: Set: Add 10000 random ints to set of size 1000000: Java: 103.9ns/op Dexx: 441.9ns/op. Java is 4.25 times faster
BENCHMARK: SortedMap: Remove all items randomly from a map of size 100 elements: Java: 20.0ns/op Dexx: 230.0ns/op. Java is 11.50 times faster
BENCHMARK: SortedMap: Remove all items randomly from a map of size 10000 elements: Java: 167.8ns/op Dexx: 662.6ns/op. Java is 3.95 times faster
BENCHMARK: SortedMap: Remove all items randomly from a map of size 100000 elements: Java: 317.9ns/op Dexx: 1205.99ns/op. Java is 3.79 times faster
BENCHMARK: SortedMap: Remove all items randomly from a map of size 1000000 elements: Java: 904.464ns/op Dexx: 1881.795ns/op. Java is 2.08 times faster
BENCHMARK: SortedMap: Put 10000 random ints to map of size 100: Java: 148.9ns/op Dexx: 821.4ns/op. Java is 5.52 times faster
BENCHMARK: SortedMap: Put 10000 random ints to map of size 10000: Java: 206.6ns/op Dexx: 1034.5ns/op. Java is 5.01 times faster
BENCHMARK: SortedMap: Put 10000 random ints to map of size 100000: Java: 320.6ns/op Dexx: 1569.5ns/op. Java is 4.90 times faster
BENCHMARK: SortedMap: Put 10000 random ints to map of size 1000000: Java: 814.3ns/op Dexx: 2298.4ns/op. Java is 2.82 times faster
BENCHMARK: SortedMap: Check map of size 100 contains element 100 times: Java: 20.0ns/op Dexx: 40.0ns/op. Java is 2.00 times faster
BENCHMARK: SortedMap: Check map of size 10000 contains element 10000 times: Java: 144.2ns/op Dexx: 177.5ns/op. Java is 1.23 times faster
BENCHMARK: SortedMap: Check map of size 100000 contains element 100000 times: Java: 363.8ns/op Dexx: 339.27ns/op. Dexx is 1.07 times faster
BENCHMARK: SortedMap: Check map of size 1000000 contains element 1000000 times: Java: 677.525ns/op Dexx: 837.361ns/op. Java is 1.24 times faster
BENCHMARK: SortedSet: Add 100 ints in order to empty set: Java: 40.0ns/op Dexx: 460.0ns/op. Java is 11.50 times faster
BENCHMARK: SortedSet: Add 10000 ints in order to empty set: Java: 78.9ns/op Dexx: 961.3ns/op. Java is 12.18 times faster
BENCHMARK: SortedSet: Add 100000 ints in order to empty set: Java: 142.73ns/op Dexx: 1305.39ns/op. Java is 9.15 times faster
BENCHMARK: SortedSet: Add 1000000 ints in order to empty set: Java: 227.026ns/op Dexx: 1675.422ns/op. Java is 7.38 times faster
BENCHMARK: SortedSet: Add 100 ints in reverse order to empty set: Java: 50.0ns/op Dexx: 410.0ns/op. Java is 8.20 times faster
BENCHMARK: SortedSet: Add 10000 ints in reverse order to empty set: Java: 71.9ns/op Dexx: 920.7ns/op. Java is 12.81 times faster
BENCHMARK: SortedSet: Add 100000 ints in reverse order to empty set: Java: 142.82ns/op Dexx: 1267.85ns/op. Java is 8.88 times faster
BENCHMARK: SortedSet: Add 1000000 ints in reverse order to empty set: Java: 218.215ns/op Dexx: 1624.965ns/op. Java is 7.45 times faster
BENCHMARK: SortedSet: Remove all items randomly from a set of size 100 elements: Java: 30.0ns/op Dexx: 440.0ns/op. Java is 14.67 times faster
BENCHMARK: SortedSet: Remove all items randomly from a set of size 10000 elements: Java: 159.7ns/op Dexx: 944.6ns/op. Java is 5.91 times faster
BENCHMARK: SortedSet: Remove all items randomly from a set of size 100000 elements: Java: 303.3ns/op Dexx: 1578.16ns/op. Java is 5.20 times faster
BENCHMARK: SortedSet: Remove all items randomly from a set of size 1000000 elements: Java: 953.421ns/op Dexx: 2252.865ns/op. Java is 2.36 times faster
BENCHMARK: SortedSet: Check set of size 100 contains element 100 times: Java: 20.0ns/op Dexx: 70.0ns/op. Java is 3.50 times faster
BENCHMARK: SortedSet: Check set of size 10000 contains element 10000 times: Java: 134.7ns/op Dexx: 236.0ns/op. Java is 1.75 times faster
BENCHMARK: SortedSet: Check set of size 100000 contains element 100000 times: Java: 284.0ns/op Dexx: 414.72ns/op. Java is 1.46 times faster
BENCHMARK: SortedSet: Check set of size 1000000 contains element 1000000 times: Java: 718.081ns/op Dexx: 784.759ns/op. Java is 1.09 times faster
BENCHMARK: SortedSet: Add 10000 random ints to set of size 100: Java: 138.1ns/op Dexx: 801.4ns/op. Java is 5.80 times faster
BENCHMARK: SortedSet: Add 10000 random ints to set of size 10000: Java: 187.0ns/op Dexx: 1008.9ns/op. Java is 5.40 times faster
BENCHMARK: SortedSet: Add 10000 random ints to set of size 100000: Java: 344.7ns/op Dexx: 1595.9ns/op. Java is 4.63 times faster
BENCHMARK: SortedSet: Add 10000 random ints to set of size 1000000: Java: 825.0ns/op Dexx: 2113.1ns/op. Java is 2.56 times faster